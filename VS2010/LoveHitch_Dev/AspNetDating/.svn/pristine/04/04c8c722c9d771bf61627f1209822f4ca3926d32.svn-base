/* ASPnetDating 
 * Copyright (C) 2003-2010 eStream 
 * lovehitch.com

 *  
 * IMPORTANT: This is a commercial software product. By using this product  
 * you agree to be bound by the terms of the ASPnetDating license agreement.  
 * It can be found at lovehitch.com/agreement.htm

 *  
 * This notice may not be removed from the source code. 
 */
using System;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using AspNetDating.Classes;
using AspNetDating.Classes.MySpace;
using DataAvailability=AspNetDating.Classes.MySpace.DataAvailability;

namespace AspNetDating.Components
{
    public partial class LoginBox : UserControl
    {
        protected Label lblNotRegisteredYet;
        protected SmallBoxStart SmallBoxStart1;

        protected void Page_Load(object sender, EventArgs e)
        {
            PrepareStrings();
        }

        private void PrepareStrings()
        {
            if (SmallBoxStart1 != null)
                SmallBoxStart1.Title = Lang.Trans("Already registered?");
            cbRememberMe.Text = Lang.Trans("Remember me.");
            fbForgotPassword.Text = Lang.Trans("Forgot your password?");
            fbForgotPassword.ToolTip = Lang.Trans("Click here to retrieve your password.");
            fbForgotPassword2.Text = Lang.Trans("Forgot your password?");
            fbForgotPassword2.ToolTip = Lang.Trans("Click here to retrieve your password.");
            //pnlLogin.ToolTip = Lang.Trans("  Welcome!   Please,  Join  us! Registration is 100% free and easy Once  registered,   You  have  the opportunity  to  browse  thousands of  profiles  with  photos  and to answer those you  find interesting");
            pnlLogin.ToolTip = Lang.Trans("Join us! Registration is 100% free and easy. Once registered - you have the opportunity to browse thousands of profiles with photos and to answer those you find interesting.");

            if (lblNotRegisteredYet != null)
                lblNotRegisteredYet.Text = Lang.Trans("Not registered yet?<br>What are you waiting for?");

            if (fbRegister != null)
                fbRegister.Text = Lang.Trans("Join for free!");

            fbLogin.Text = Lang.Trans("Enter");
            fbLogin2.Text = Lang.Trans("Enter");

            if (Config.Users.ShowStealthMode)
            {
                cbStealthMode.Visible = true;
                cbStealthMode.Text = Lang.Trans("stealth mode");
            }
            else
                cbStealthMode.Visible = false;

            divCardSpace.Visible = Config.Users.EnableCardSpace;
            divMySpace.Visible = Config.Misc.EnableMySpaceIntegration;
            if (Config.Misc.EnableMySpaceIntegration)
                btnUseMySpace.AlternateText = "Login with MySpace".Translate();
            divFacebook.Visible = Config.Misc.EnableFacebookIntegration;

            pnlLoginButtons.Visible =
                divCardSpace.Visible || divMySpace.Visible || divFacebook.Visible;
        }

        #region Web Form Designer generated code

        protected override void OnInit(EventArgs e)
        {
            //
            // CODEGEN: This call is required by the ASP.NET Web Form Designer.
            //
            InitializeComponent();
            base.OnInit(e);
        }

        /// <summary>
        ///		Required method for Designer support - do not modify
        ///		the contents of this method with the code editor.
        /// </summary>
        private void InitializeComponent()
        {
        }

        #endregion

        protected void fbLogin_Click(object sender, EventArgs e)
        {
            if (txtUsername.Text.Length == 0)
            {
                showError(Lang.Trans("Please specify username!"));
                return;
            }
            if (txtPassword.Text.Length == 0)
            {
                showError(Lang.Trans("Please specify password!"));
                return;
            }

            UserSession user;
            try
            {
                user = new UserSession(txtUsername.Text);
                ((PageBase)Page).CurrentUserSession = user;
                MatchmakerHelper.CurrentUsername = user.Username;
                user.StealthMode = cbStealthMode.Checked;
                user.Authorize(txtPassword.Text, Session.SessionID);
                if (Config.Misc.EnableFacebookIntegration && user.FacebookID.HasValue && user.FacebookID > 0)
                {
                    FacebookHelper.AddFriends(user, 60, HttpContext.Current, null);
                }
            }
            catch (NotFoundException err)
            {
                showError(err.Message);
                return;
            }
            catch (AccessDeniedException err)
            {
                showError(err.Message);
                return;
            }
            catch (SmsNotConfirmedException)
            {
                Response.Redirect("SmsConfirm.aspx?username=" + txtUsername.Text);
                return;
            }
            catch (ArgumentException err)
            {
                showError(err.Message);
                return;
            }
            catch (Exception err)
            {
                Global.Logger.LogWarning(err);
                showError(err.Message);
                return;
            }

            ((PageBase) Page).CurrentUserSession = user;

            //if (Config.Users.NewMessageNotification)
            //    Message.ClearNewMessageFlags(user.Username);

            if (user.PrevLogin.Date != DateTime.Now.Date)
                User.AddScore(user.Username, Config.UserScores.DailyLogin, "Login");

            if (cbRememberMe.Checked)
            {
                string guid = User.CreatePendingGuid(user.Username);
                Response.Cookies["rememberMe"].Value = guid;
                Response.Cookies["rememberMe"].Expires = DateTime.Now.AddDays(7);
            }

            try
            {
                IPLogger.Log(user.Username, Request.UserHostAddress, IPLogger.ActionType.Login);
            }
            catch (Exception err)
            {
                Global.Logger.LogError("LoginBox IP Logger", err);
            }

            if (!string.IsNullOrEmpty(Request.Params["back_url"]))
                Response.Redirect(Request.Params["back_url"]);
            else
                Response.Redirect(MatchmakerHelper.CurrentHomePage);
        }

        private void showError(string error)
        {
            Page.ClientScript.RegisterStartupScript(GetType(), "error",
                                                    String.Format("var alert_string = '{0}';",
                                                    //String.Format("alert('{0}');",
                                                    //String.Format("jQuery(function($){alert('{0}');});", 
                                                    error.Replace("'", "\\'")), true);
        }

        protected void fbForgotPassword_Click(object sender, EventArgs e)
        {
            Response.Redirect("LostPassword.aspx");
        }

        protected void fbRegister_Click(object sender, EventArgs e)
        {
            Response.Redirect("~/LoginThroughFacebook.aspx?back_url=default.aspx");
        }

        protected void btnUseMySpace_Click(object sender, ImageClickEventArgs e)
        {
            Response.Redirect("~/LoginThroughMySpace.aspx");
        }
    }
}