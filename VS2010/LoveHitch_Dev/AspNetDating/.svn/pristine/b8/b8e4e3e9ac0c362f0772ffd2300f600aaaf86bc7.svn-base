using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Net;
using System.Web;
using AspNetDating.Model;

namespace AspNetDating.Classes
{
    public class Twitter
    {
        public static void SaveCredentials(string username, string twitterUsername, string twitterPassword)
        {
            using (var db = new AspNetDatingDataContext())
            {
                var credentials = db.TwitterCredentials.FirstOrDefault(tc => tc.u_username == username);
                if (credentials == null)
                {
                    credentials = new TwitterCredential {u_username = username};
                    db.TwitterCredentials.InsertOnSubmit(credentials);
                }

                credentials.tc_username = twitterUsername;
                credentials.tc_password = twitterPassword;

                db.SubmitChanges();
            }
        }

        public static bool HasCredentials(string username)
        {
            using (var db = new AspNetDatingDataContext())
            {
                return db.TwitterCredentials.Any(tc => tc.u_username == username);
            }
        }

        public static void PublishTweet(string username, string tweet)
        {
            using (var db = new AspNetDatingDataContext())
            {
                var credentials = db.TwitterCredentials.FirstOrDefault(tc => tc.u_username == username);
                if (credentials == null) return;

                // encode the username/password
                string user =
                    Convert.ToBase64String(
                        System.Text.Encoding.UTF8.GetBytes(credentials.tc_username + ":" + credentials.tc_password));
                // determine what we want to upload as a status
                byte[] bytes = System.Text.Encoding.ASCII.GetBytes("status=" + tweet);
                // connect with the update page
                var request = (HttpWebRequest) WebRequest.Create("http://twitter.com/statuses/update.xml");
                // set the method to POST
                request.Method = "POST";
                // thanks to argodev for this recent change!
                request.ServicePoint.Expect100Continue = false;
                // set the authorisation levels
                request.Headers.Add("Authorization", "Basic " + user);
                request.ContentType = "application/x-www-form-urlencoded";
                // set the length of the content
                request.ContentLength = bytes.Length;
                // set up the stream
                Stream reqStream = request.GetRequestStream();
                // write to the stream
                reqStream.Write(bytes, 0, bytes.Length);
                // close the stream
                reqStream.Close();
            }
        }

        public static void RemoveCredentials(string username)
        {
            using (var db = new AspNetDatingDataContext())
            {
                var credentials = db.TwitterCredentials.FirstOrDefault(tc => tc.u_username == username);
                if (credentials != null)
                {
                    db.TwitterCredentials.DeleteOnSubmit(credentials);
                    db.SubmitChanges();
                }
            }
        }
    }
}
